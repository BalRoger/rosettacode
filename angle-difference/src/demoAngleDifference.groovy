// Solution A:
// {{trans|C++}}

def angleDifferenceA(double b1, double b2) {
    def r = (b2 - b1) % 360.0
    (r > 180.0    ? r - 360.0
    : r <= -180.0 ? r + 360.0
                  : r)
}


// Solution B:
// In the spirit of the Fortran "Why branch when you can math?" solution, but without all the messy trigonometry.

def angleDifferenceB(double b1, double b2) {
    ((b2 - b1) % 360.0 - 540.0) % 360.0 + 180.0
}

// NOTE: We could ADD 540 and SUBTRACT 180 instead. The difference is that my choice normalizes "about face" to 180° while the other normalizes "about face" to -180°.


// Test:

println "         b1                      b2                      diff A                  diff B"
[
    [b1:     20,               b2:     45             ],
    [b1:    -45,               b2:     45             ],
    [b1:    -85,               b2:     90             ],
    [b1:    -95,               b2:     90             ],
    [b1:    -45,               b2:    125             ],
    [b1:    -45,               b2:    145             ],
    [b1:     29.4803,          b2:    -88.6381        ],
    [b1:    -78.3251,          b2:   -159.036         ],
    [b1: -70099.74233810938,   b2:  29840.67437876723 ],
    [b1:-165313.6666297357,    b2:  33693.9894517456  ],
    [b1:   1174.8380510598456, b2:-154146.66490124757 ],
    [b1:  60175.77306795546,   b2:  42213.07192354373 ]
].each { bearings ->
    def (b1,b2) = bearings.values().collect{ it as double }
    printf ("%22.13f  %22.13f  %22.13f  %22.13f\n", b1, b2, angleDifferenceA(b1, b2), angleDifferenceB(b1, b2))
}


//Output:
//         b1                      b2                      diff A                  diff B
//      20.0000000000000        45.0000000000000        25.0000000000000        25.0000000000000
//     -45.0000000000000        45.0000000000000        90.0000000000000        90.0000000000000
//     -85.0000000000000        90.0000000000000       175.0000000000000       175.0000000000000
//     -95.0000000000000        90.0000000000000      -175.0000000000000      -175.0000000000000
//     -45.0000000000000       125.0000000000000       170.0000000000000       170.0000000000000
//     -45.0000000000000       145.0000000000000      -170.0000000000000      -170.0000000000000
//      29.4803000000000       -88.6381000000000      -118.1184000000000      -118.1184000000000
//     -78.3251000000000      -159.0360000000000       -80.7109000000000       -80.7109000000000
//  -70099.7423381093800     29840.6743787672300      -139.5832831233856      -139.5832831233856
// -165313.6666297357000     33693.9894517456000       -72.3439185186871       -72.3439185186871
//    1174.8380510598456   -154146.6649012475700      -161.5029523074045      -161.5029523074045
//   60175.7730679554600     42213.0719235437300        37.2988555882694        37.2988555882694
